# print("Hello World " * 5)
# print("2+5=") 
# for x in "Spam!":
# 	print (x)
# import string
# from itertools import count

# N = int(input("Введите размер списка: "))
# korolev = list(range(1, N+1))
# print(korolev)
# import math
# print (math.sqrt(math.pi*N))

# Списки
# M = [(1, 2, 3),
#      (4, 5, 6),
# 	(7,8,9)]
# print(M[1])  # вторая строка матрицы
# print(M[1][2])  # третий элемент второй строки
# print([row[1] for row in M])  # второй столбец

# number = int(input('Введите число: '))
# print(number+2)
# ---------------------------------------------------------------------------------------------------------------------
# Напишите программу, которая считывает со стандартного ввода целые числа,
# по одному числу в строке, и после первого введенного нуля выводит
# сумму полученных на вход чисел.

# result = 0
# n = 1
# while n != 0:
#     n = int(input(''))
#     result = result + n
# print(result)
# ---------------------------------------------------------------------------------------------------------------------
# Напишите программу, которая помогает найти это число.
# Программа должна считывать размеры команд (два положительных целых числа aa и bb,
# каждое число вводится на отдельной строке) и выводить наименьшее число dd,
# которое делится на оба этих числа без остатка.

# a = int(input())
# b = int(input())
# n = min(a,b)
# while n % a != 0 or n % b != 0: # истина И ложь = ложь (нужно или)
#     n += 1
# print(n)
# ---------------------------------------------------------------------------------------------------------------------
# Напишите программу, которая считывает целые числа с консоли по одному числу в строке.
#
# Для каждого введённого числа проверить:
# если число меньше 10, то пропускаем это число;
# если число больше 100, то прекращаем считывать числа;
# в остальных случаях вывести это число обратно на консоль в отдельной строке.

# n = 0
# while n < 50:
#     a = int(input())
#     if a < 10:
#         continue
#     if a > 100:
#         break
#     print(a)
# ---------------------------------------------------------------------------------------------------------------------
# Напишите программу, на вход которой даются четыре числа aa, bb, cc и dd,
# каждое в своей строке. Программа должна вывести фрагмент таблицы умножения
# для всех чисел отрезка [a; b][a;b] на все числа отрезка [c;d][c;d].
#
# Числа aa, bb, cc и dd являются натуральными и не превосходят 10, a \le ba≤b, c \le dc≤d.
#
# Следуйте формату вывода из примера, для разделения элементов внутри
# строки используйте '\t' — символ табуляции. Заметьте, что левым столбцом
# и верхней строкой выводятся сами числа из заданных отрезков — заголовочные столбец и строка таблицы.

# a = int(input())
# b = int(input())
# c = int(input())
# d = int(input())
# print("", end='\t')
# for i in range(c, d + 1):
#     print(i, end='\t')
# print()
# for i in range(a, b + 1):
#     print(i, end='\t')
#     for j in range(c, d + 1):
#         print(j * i, end='\t')
#     print()
# ---------------------------------------------------------------------------------------------------------------------
# Напишите программу, которая считывает с клавиатуры два числа aa и bb, считает и выводит на консоль среднее
# арифметическое всех чисел из отрезка [a; b][a;b], которые кратны числу 3.
#
# В приведенном ниже примере среднее арифметическое считается для чисел на отрезке [-5; 12][−5;12]. Всего чисел,
# делящихся на 3, на этом отрезке 6: -3, 0, 3, 6, 9, 12−3,0,3,6,9,12. Их среднее арифметическое равно 4.54.5
# На вход программе подаются интервалы, внутри которых всегда есть хотя бы одно число, которое делится на 3

# a, b = (int(i) for i in input().split()) #ввод через пробел
# # a=int(input())
# # b=int(input())
# sum, count = 0, 0
# for i in range(a, b + 1):
#     if i % 3 == 0:
#         sum += i
#         count += 1
# print(sum / count)
# ---------------------------------------------------------------------------------------------------------------------
# Напишите программу, которая вычисляет процентное содержание символов G (гуанин) и C (цитозин) в введенной строке
# (программа не должна зависеть от регистра вводимых символов).
#
# Например, в строке "acggtgttat" процентное содержание символов G и C равно \dfrac4{10} \cdot 100 = 40.0
# 10
# 4  ⋅100=40.0, где 4 -- это количество символов G и C,  а 10 -- это длина строки.

# str = input()
# str = str.upper()
# count = (str.count('G')) + (str.count('C'))
# print((((str.count('G')) + (str.count('C'))) / (len(str))) * 100)

# s = 'abcdefghijk'
# print(s[:6])
# ---------------------------------------------------------------------------------------------------------------------
# Кодирование осуществляется следующим образом:
# s = 'aaaabbсaa' преобразуется в 'a4b2с1a2', то есть группы одинаковых символов исходной строки заменяются на этот
# символ и количество его повторений в этой позиции строки.
#
# Напишите программу, которая считывает строку, кодирует её предложенным алгоритмом и выводит закодированную
# последовательность на стандартный вывод. Кодирование должно учитывать регистр символов.
# aaaabbcaa -> a4b2c1a2

# str_1 = input()
# s = ''
# for j in range(len(str_1)):
#     cnt = 0
#     for i in range(len(str_1)):
#         if str_1[0] == str_1[i]:
#             cnt += 1
#         else:
#             break
#     s += str_1[:1] + str(cnt)
#     str_1 = str_1[cnt:]
#     if len(str_1) < 1:
#         break
# print(s)
# ---------------------------------------------------------------------------------------------------------------------
# Напишите программу, на вход которой подается одна строка с целыми числами. Программа должна вывести сумму этих чисел.
# Используйте метод split строки.
#
# Sample Input:
# 4 -1 9 3
# Sample Output:
# 15

# str_1 = input().split()
# sum = 0
# for i in range(len(str_1)):
#     sum += int(str_1[i])
# print(sum)

# ---------------------------------------------------------------------------------------------------------------------
# Напишите программу, на вход которой подаётся список чисел одной строкой. Программа должна для каждого
# элемента этого списка вывести сумму двух его соседей. Для элементов списка, являющихся крайними, одним из соседей
# считается элемент, находящий на противоположном конце этого списка. Например, если на вход подаётся список
# "1 3 5 6 10",
# то на выход ожидается список "13 6 9 15 7" (без кавычек).
# Если на вход пришло только одно число, надо вывести его же.
# Вывод должен содержать одну строку с числами нового списка, разделёнными пробелом.
#
# Sample Input 1:
# 1 3 5 6 10
# Sample Output 1:
# 13 6 9 15 7
# Sample Input 2:
# 10
# Sample Output 2:
# 10

str_1 = input().split()
if len(str_1) == 1:
    print(*str_1, end='')
else:
    for i in range(len(str_1)):
        sum = 0
        if i == 0:
            sum += int(str_1[-1]) + int(str_1[1])
        elif i == len(str_1) - 1:
            sum += int(str_1[-2]) + int(str_1[0])
        else:
            sum += int(str_1[i - 1]) + int(str_1[i + 1])
        print(sum, end=' ')
